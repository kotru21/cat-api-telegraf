import { Composer, Markup } from "telegraf";
import getFact from "../util/fetch.js";
import getLikes from "../util/getlikes.js";

const createKeyboard = (wikipediaUrl, likesCount, catId) => {
  return Markup.inlineKeyboard([
    [
      Markup.button.url("–í–∏–∫–∏–ø–µ–¥–∏—è", wikipediaUrl),
      Markup.button.callback(`üëç ${likesCount}`, `data-${catId}`),
    ],
  ]);
};

export default Composer.command("fact", async (ctx) => {
  try {
    const catData = await getFact();
    const breed = catData.breeds[0];
    const [likes] = await getLikes(catData.id);

    await ctx.replyWithPhoto(
      { url: catData.url },
      {
        parse_mode: "Markdown",
        caption: `_${breed.name}_\n${breed.description}`,
        ...createKeyboard(breed.wikipedia_url, likes?.count || 0, catData.id),
      }
    );
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–∫—Ç–∞:", error);
    await ctx.reply(
      "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Ä–æ–¥–µ –∫–æ—à–∫–∏"
    );
  }
});
